<h1>About</h1>
<p><a href="https://github.com/mdecycu/cmsite"> https://github.com/mdecycu/cmsite </a></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
<h1>課程進度</h1>
<h2>W4~W5</h2>
<h3>ptc</h3>
<div class="container"><nav>
<div id="tipue_search_content">
<p><a href="https://www.ptc.com/">PTC</a><span> </span>公司目前擁有 Creo 與<span> </span><a href="https://www.onshape.com/">Onshape</a><span> </span>等兩套常見的電腦輔助機械設計套件. Creo 前身為著名的參數設計繪圖鼻祖 Pro/Engineer, 而<span> </span><a href="https://www.onshape.com/">Onshape</a><span> </span>則由原創 SOLIDWORKS 的開發者所建立的全雲端電腦輔助機械設計服務.</p>
<p>Creo for students:<span> </span><a href="https://www.ptc.com/en/products/education/free-software/creo-college-download">https://www.ptc.com/en/products/education/free-software/creo-college-download</a></p>
<p>學生版安裝授權, 統一透過 product code: BK100908EDSTUDENTEDUNI 取得, 但必須在 IPv4 連網時才能取得授權檔案: BK100908EDSTUDENTEDUNI_license.dat, 授權使用期限為一年.</p>
<p><img alt="" height="228" src="https://mde.tw/cadnote/images/ptc_creo_10.0_student_version.png" width="400"/></p>
<p>已經建立帳號者:<span> </span><a href="https://community.ptc.com/t5/PTC-Education-Forum/bd-p/PTCEducation">登入 PTC education 網站</a></p>
<p><a href="https://apps.ptc.com/schools/references/install_creo10_schools_standard.pdf">https://apps.ptc.com/schools/references/install_creo10_schools_standard.pdf</a> </p>
<p>使用管理者開啟 parametric.psf 加入: ENV=PRO_LANG=english, 表示要使用英文介面. 使用 Chinese Simplified 代號為 chs, 使用 Chinese Traditional 代號為 cht.</p>
<p>安裝 Creo 位置: C:\Program Files\PTC\Creo 10.0.0.0\Parametric\bin</p>
<p>免費使用的教育版授權檔案為: BK100908EDSTUDENTEDUNI_license.dat</p>
<p>以下為安裝 Creo 10 的過程與說明 (<a href="https://mde.tw/cadnote/downloads/wink_html.txt">wink_html.txt</a>):</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-mce-fragment="1" data-varname="winkVideoData_creo10" height="630" muted="true" width="1008"></video></div>
<p>Onshape for education:<span> </span><a href="https://www.onshape.com/en/education/">https://www.onshape.com/en/education/</a></p>
<br/>autodesk &lt;&lt;<span> </span><a href="https://mde.tw/cadnote/content/autodesk.html">Previous</a><span> </span><a href="https://mde.tw/cadnote/content/w6-w7.html">Next</a><span> </span>&gt;&gt; w6-w7</div>
<div class="container">
<div class="row pt-3 mx-auto">
<p>Copyright ©2023 All rights reserved | This template is made with<span> </span><i aria-hidden="true" class="icon-heart"></i><span> </span>by<span> </span><a href="https://colorlib.com/" target="_blank">Colorlib</a></p>
</div>
</div>
</nav></div>
<h3>autodesk</h3>
<p><span>AutoDesk 公司旗下的電腦輔助機械設計套件都提供</span><a href="https://www.autodesk.com/education/edu-software/overview">免付費教育版</a><span>. 其中 Inventor 可</span><a href="https://software.nfu.edu.tw/Autodesk/autodesk2022.pdf">直接從學校網站下載</a><span>, 且</span><a href="https://accounts.autodesk.com/register">教育版的 A360</a><span><span> </span>可在雲端或近端啟動, 但近端必須安裝對應套件.</span></p>
<h3>siemens</h3>
<p>西門子 (Siemens) 是德國有名的機電資軟硬體整合公司, 目前旗下的電腦輔助機械設計套件包括中階套件<span> </span><span>Solid Edge (<a href="https://solidedge.siemens.com/en/solutions/users/hobbyists-and-makers/">community 版 Siemens Solid Edge</a> - <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/Ef9XW25wCPtCspWavfXRQkYBKeFkOnZDfMyA3Q-1DRhDNA?e=grfmFo">可攜版下載</a> (無須上網即可開啟, 但因為啟動之前必須執行 Solid Edge 所需之 Registry import, 因此可攜版比較建議在有還原卡或虛擬主機中使用, for @nfu users only), 與高階套件 NX.</span></p>
<p><span>下載<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EdHAOThcQztGj4EZy5Duab0Bvcf3AbzsC_MLsCfmwBXAFg?e=4dPh6O">NX2027.3401_lite_cad2022.7z</a><span> </span>(需要下載密碼, 執行時必須連網至機械設計工程系的認證伺服器才能開啟</span></p>
<h3>solidworks</h3>
<p><span>SOLIDWORKS</span><span> </span>是目前全球機械業界使用最普遍的設計與繪圖套件 (估計全球有超過 300 萬名工程師用戶). 有關 CAD 的發展歷史, 請參考<a href="https://www.youtube.com/watch?v=mcwIMsh_g3o">這個影片</a>. 有關 SOLIDWORKS 的起源以及相關歷史資料, 請參考<a href="https://www.youtube.com/watch?v=BXMPY36xWJY">影片一</a>、<a href="https://www.youtube.com/watch?v=zqnIVRCMeSA">影片二</a>、<a href="https://www.youtube.com/watch?v=6vxLejTtSJw">影片三</a>、<a href="https://www.youtube.com/watch?v=-r2T-nV5eVc">影片四</a>與<a href="https://www.youtube.com/watch?v=RgUSsXdLjvc">影片五</a>的介紹.</p>
<p>其他與 SOLIDWORKS 有關的參考資料:</p>
<p><span>SOLIDWORKS 是由<span> </span><a href="https://en.wikipedia.org/wiki/Jon_Hirschtick">Jon Hirschtick</a><span> </span>在1993 年創立的。他運用作為<span> </span><a href="https://en.wikipedia.org/wiki/MIT_Blackjack_Team">MIT Blackjack Team</a><span> </span>(<a href="https://en.wikipedia.org/wiki/21_(2008_film)">決勝 21 點電影</a>) 成員之一所賺到的 100 萬美元創辦該公司。SOLIDWORKS 首次於1995 年與 Windows 95 同時發布.<span> </span><a href="https://dev.co/solidworks">(source</a>)</span></p>
<p><span>interviews of Jon Hirschtick, </span><a href="https://soundcloud.com/robot-report-podcast/jon-hirschtick-from-onshapeptc-favorite-robotics-startups-of-2020">1</a>, <a href="https://medium.com/authority-magazine/jon-hirschtick-of-onshape-5-things-you-need-to-know-to-create-a-successful-saas-business-b768dc98c6eb">2</a>, <a href="https://www.linkedin.com/pulse/cofes-institute-interview-jon-hirschtick-vincent-caprio">3</a>, <a href="https://www.forbes.com/sites/tjmccue/2016/12/19/state-of-3d-software-interview-with-onshape-ceo-jon-hirschtick/?sh=3667798610b3">4</a>, <a href="https://www.linkedin.com/pulse/3-stories-one-told-you-jon-hirschtick-leadership-edition-zain-raza">5</a></p>
<p>當年 <a href="https://www.youtube.com/watch?v=9NIu-Lh_HWo">SolidWorks 97 demo 影片</a></p>
<p>使用 SOLIDWORKS 執行電腦輔助設計零組件繪圖, 在電腦輔助設計室中可以使用 SOLIDWORKS 2023, 或在自己的電腦或筆電中安裝 SOLIDWORKS 2022 教育版 (2023 安裝套件尚未取得).</p>
<p><span>下載安裝 SOLIDWORKS 2022</span>:</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EY9GinJ2ns5Iiy-ih3-y9xwBdgl3H-ajMPZOIxZhd9Nssg?e=jP7Y4T">下載 SolidWorks 2022 安裝檔案</a><span> </span>(檔案大小 16GB, for @nfu users only, 請先根據安裝序號與認證主機在校園網路中或透過 VPN (從<span> </span><a href="https://ecare.nfu.edu.tw/">ecare 登入</a>申請) 連網, 必須完整安裝結束後, 再進行 service pack 更新)</p>
<p>安裝 SoildWorks 2022 過程畫面 (因為必須在校園內或使用 VPN 認證才能完成安裝, 因此以下直接顯示出 Serial Number 與認證主機 IP 位址):</p>
<p>下載後解開壓縮檔案, 執行 Setup.exe 進行安裝 (以::2 主機的安裝為例):</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_1.png" width="400"/></p>
<p>輸入安裝序號, 以下只安裝基本模組, 並沒有勾選其餘套件:</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_2.png" width="400"/></p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_3.png" width="400"/></p>
<p>在安裝過程必須先安裝與序號對應的版本內容後再進行更新, 因此以下使用內定的否, 表示先不下載更新檔案:</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_4.png" width="400"/></p>
<p>勾選接受 SolidWorks 條款後進行安裝:</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_5.png" width="400"/></p>
<p>點選馬上安裝後,  會跳出認證伺服器的視窗表單, 必須輸入正確的認證埠號與 IPv4 位址才可進行安裝, 截至 2023.04.07, 校內的 SolidWorks 認證主機僅支援 IPv4 網路協定認證, 若希望取得認證的電腦僅啟動 IPv6 網路協定, 將無法取得認證授權.</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_6.png" width="400"/></p>
<p>接著按下確定後, 就可以進行漫長且容量達 20 GB 的 SolidWorks 安裝:</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_7.png" width="400"/></p>
<p>安裝完成之前, 會跳出下列視窗, 可以選擇不參加客戶經驗改進計畫, 或許能讓操作過程更加順暢:</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_8.png" width="400"/></p>
<p>最後按下完成鍵就可以執行 SolidWorks 2022 了.</p>
<p>啟動時顯示共有 500 個用戶可以同時連線:</p>
<p><img alt="" height="273" src="https://mde.tw/cadnote/images/solidworks2022_installation_9.png" width="400"/></p>
<p>啟動時必須允許 SolidWorks 通過公用網路防火牆:</p>
<p><img alt="" height="293" src="https://mde.tw/cadnote/images/solidworks2022_installation_10.png" width="400"/></p>
<p>而且必須接受 SolidWorks 的使用授權:</p>
<p><img alt="" height="293" src="https://mde.tw/cadnote/images/solidworks2022_installation_11.png" width="400"/></p>
<p>然後還要進行各模組的資料更新, 以下選擇更新所有模組:</p>
<p><img alt="" height="290" src="https://mde.tw/cadnote/images/solidworks2022_installation_12.png" width="400"/></p>
<p>更新完成後, 在開始選單中執行 SOLIDWORKS 2022, 然後同意使用授權:</p>
<p><img alt="" height="347" src="https://mde.tw/cadnote/images/solidworks2022_installation_13.png" width="400"/></p>
<p>終於可以使用這個佔用 20GB 硬碟資料的 SolidWorks 了:</p>
<p><img alt="" height="216" src="https://mde.tw/cadnote/images/solidworks2022_installation_14.png" width="400"/></p>
<h2>W6~W7</h2>
<h3>Win11</h3>
<p>目前擬將近端的靜態網站呈現改為 http, 而非 https 暫時避開下列問題.</p>
<hr/>
<p>為了讓 cd2023 內容管理系統在近端 Python 3.12.0 環境啟動時, 能夠順利透過 start_static 模擬靜態系統, 目前的 start_static 原始碼改為:</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_656859">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py decorator">@app</code><code class="py plain">.route(</code><code class="py string">'/start_static/'</code><code class="py plain">)</code></div>
<div class="line number2 index1 alt1"><code class="py keyword">def</code> <code class="py plain">start_static():</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="py spaces">    </code><code class="py comments">"""Start local static server</code></div>
<div class="line number5 index4 alt2"><code class="py spaces">    </code><code class="py comments">"""</code></div>
<div class="line number6 index5 alt1"> </div>
<div class="line number7 index6 alt2"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">isAdmin():</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">        </code><code class="py plain">server_address </code><code class="py keyword">=</code> <code class="py plain">get_wan_address() </code><code class="py keyword">or</code> <code class="py string">'localhost'</code></div>
<div class="line number9 index8 alt2"><code class="py spaces">        </code><code class="py plain">server_port </code><code class="py keyword">=</code> <code class="py plain">static_port</code></div>
<div class="line number10 index9 alt1"> </div>
<div class="line number11 index10 alt2"><code class="py spaces">        </code><code class="py comments"># Determine address family based on server_address</code></div>
<div class="line number12 index11 alt1"><code class="py spaces">        </code><code class="py plain">address_family </code><code class="py keyword">=</code> <code class="py plain">socket.AF_INET </code><code class="py keyword">if</code> <code class="py string">':'</code> <code class="py keyword">not</code> <code class="py keyword">in</code> <code class="py plain">server_address </code><code class="py keyword">else</code> <code class="py plain">socket.AF_INET6</code></div>
<div class="line number13 index12 alt2"> </div>
<div class="line number14 index13 alt1"><code class="py spaces">        </code><code class="py plain">httpd </code><code class="py keyword">=</code> <code class="py plain">http.server.HTTPServer((server_address, server_port), http.server.SimpleHTTPRequestHandler, bind_and_activate</code><code class="py keyword">=</code><code class="py color1">False</code><code class="py plain">)</code></div>
<div class="line number15 index14 alt2"><code class="py spaces">        </code><code class="py plain">httpd.socket </code><code class="py keyword">=</code> <code class="py plain">socket.socket(address_family, socket.SOCK_STREAM)</code></div>
<div class="line number16 index15 alt1"><code class="py spaces">        </code><code class="py plain">httpd.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, </code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number17 index16 alt2"> </div>
<div class="line number18 index17 alt1"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py plain">address_family </code><code class="py keyword">=</code><code class="py keyword">=</code> <code class="py plain">socket.AF_INET6:</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">            </code><code class="py plain">httpd.socket.setsockopt(socket.IPPROTO_IPV6, socket.IPV6_V6ONLY, </code><code class="py value">0</code><code class="py plain">)</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">            </code><code class="py plain">httpd.socket.bind((server_address, server_port, </code><code class="py value">0</code><code class="py plain">, </code><code class="py value">0</code><code class="py plain">))</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">        </code><code class="py keyword">else</code><code class="py plain">:</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">            </code><code class="py plain">httpd.socket.bind((server_address, server_port))</code></div>
<div class="line number23 index22 alt2"><code class="py spaces">        </code><code class="py comments"># for Python 3.12.0 need to use ssl create context first</code></div>
<div class="line number24 index23 alt1"><code class="py spaces">        </code><code class="py comments"># https://docs.python.org/3/library/ssl.html#ssl-security</code></div>
<div class="line number25 index24 alt2"><code class="py spaces">        </code><code class="py plain">context </code><code class="py keyword">=</code> <code class="py plain">ssl.SSLContext(ssl.PROTOCOL_TLS_SERVER)</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">        </code><code class="py plain">context.load_cert_chain(certfile</code><code class="py keyword">=</code><code class="py string">'./localhost.crt'</code><code class="py plain">, keyfile</code><code class="py keyword">=</code><code class="py string">'./localhost.key'</code><code class="py plain">)</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">        </code><code class="py plain">httpd.socket </code><code class="py keyword">=</code> <code class="py plain">context.wrap_socket(httpd.socket, server_side</code><code class="py keyword">=</code><code class="py color1">True</code><code class="py plain">)</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">        </code><code class="py plain">httpd.server_activate()</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">        </code><code class="py plain">httpd.serve_forever()</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">    </code><code class="py keyword">else</code><code class="py plain">:</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">        </code><code class="py keyword">return</code> <code class="py plain">redirect(</code><code class="py string">"/login"</code><code class="py plain">)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>其中當 start_static 執行時, 經由 openssl 指令:</p>
<p>Y:\portablegit\usr\bin\openssl s_client -connect [Windows 11's IPv6 address]:8445 -tls1_3</p>
<p>檢查, 發現目前採用 context = ssl.SSLContext(ssl.PROTOCOL_TLS_SERVER) 設定中的 <span>ssl.PROTOCOL_TLS_SERVER, 採用的認證版本可為 tls 1.2 與 1.3 版, 但是</span>如同<a href="https://learn.microsoft.com/en-us/answers/questions/708734/tls-1-3-doesnt-work-on-windows-11-through-schannel">這裡的敘述</a>, 伺服器發出的 tls 1.3 版可以被 Windows 10 操作系統接受, 但卻無法在 Windows 11 操作系統中正確連結採用上述程式碼的靜態網頁伺服器.</p>
<p>另外, 透過 Windows 11 搜尋輸入 inetcpl.cpl 可以發現 tls 1.3 已經啟用. 因此目前無法得知為何 start_static 啟動後, 無法在 Windows 11 連線到虛擬的系統靜態網站.</p>
<h2>W8</h2>
<p>針對 Coppeliasim 4.6.0 版的推出:</p>
<p>CoppeliaSim 於 2023.10.21 推出<span> </span><a href="https://www.coppeliarobotics.com/helpFiles/en/versionInfo.htm">4.6.0 版</a>. (因為更改不多, 目前可以沿用 4.5.1 rev4, 但仍必須關注 CoppeliaSim 逐步強化 Python scripting 的趨勢(<a href="https://www.coppeliarobotics.com/helpFiles/en/luaPythonDifferences.htm">1</a>,<span> </span><a href="https://www.coppeliarobotics.com/helpFiles/en/coppeliaSimLibrary.htm#pythonClient">2</a>), 其目的在於能夠更便於在機電整合場景系統中, 導入更多的 AI 相關 Training)</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/en/plugins.htm">plugin</a><span> </span>架構更新, 可加載或卸載 plugin</p>
<p>sim.setThreadAutomaticSwitch is deprecated in favor of<span> </span><a href="https://www.coppeliarobotics.com/helpFiles/en/regularApi/simSetStepping.htm">sim.setStepping</a></p>
<p>sim.switchThread is deprecated in favor of<span> </span><a href="https://www.coppeliarobotics.com/helpFiles/en/regularApi/simStep.htm">sim.step</a></p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/en/commandLine.htm">Command-line</a><span> </span>option -H now loads the headless version of the CoppeliaSim library.</p>
<p>CoppeliaSim 使用者手冊:<span> </span><a href="https://mde.tw/pjcopsim">https://mde.tw/pjcopsim</a></p>
<p>zmq Remote API:<span> </span><a href="https://www.coppeliarobotics.com/helpFiles/en/zmqRemoteApiOverview.htm">https://www.coppeliarobotics.com/helpFiles/en/zmqRemoteApiOverview.htm</a></p>
<p><a href="https://github.com/CoppeliaRobotics/zmqRemoteApi">https://github.com/CoppeliaRobotics/zmqRemoteApi</a></p>
<p>CoppeliaSim 4.5.1 for IPv6:</p>
<p>下載<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EfEaYO4E4eBGtTV3QBCP0f0B3JBfrw11LslWmQyqZB75fw?e=Zf7hCp">CoppeliaSimEdu_4.5.1_rev4_for_cd2023.7z</a><span> </span>(需要下載密碼)</p>
<p>下載<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EVV3NaesdDdNqcoD3xAo96gBqGG4gEJFPknOIt7EfofGlg?e=OfQ4qo">zmqRemoteAPI Python for cad2023.7z</a><span> </span>(需要下載密碼)</p>
<hr/>
<p>有關 s1511.cycu.org 主機的使用, 也可以參考<span> </span><a href="https://mde.tw/cpnote">https://mde.tw/cpnote</a><span> </span>中各章節頁面內容.</p>
<p>維護網站的三個方式:</p>
<ol>
<li>localhost 透過 token, SSH 確定 git push 權限, SSH 設定可透過 Putty 完成</li>
<li>Replit 透過 connect 功能連結與 Github 的權限</li>
<li>自架主機 s1511.cycu.org, 透過 SSH 與分配埠號</li>
</ol>
<hr/>
<p>以下將說明第 3 種方法, 使用 s1511.cycu.org 管理個人與分組網站:</p>
<p>其中包括 1)<span> </span><span>如何遠端登入</span>、2 )<span> </span><span>如何取放檔案</span>、3)<span> </span><span>如何與 github 帳號彼此信任</span>、4)<span> </span><span>如何取下 cad2023</span>、5)<span> </span><span>如何啟動或關閉 cad2023 倉儲</span>、6)<span> </span><span>如何連結到動態網站</span>、7)<span> </span><span>如何設定靜態網站</span>、8)<span> </span><span>如何連動動態網站改版與靜態網頁</span>、9)<span> </span><span>如何對資料進行保全</span>以及 10)<span> </span><span>網路連線協定</span>等相關議題.</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EV9_amTTTJlLo4Xu5Hj-iR0BXMY_nn_zmcE7ynKV_aGbpw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=7UL9k9">w8_2a_s1511 設定操作影片 part1.mp4</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EcHihSEDROlEg7PrHMrBcRsBzYuLtGvcg5t359aa6IL8lw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=wMzccG">w8_2a_s1511 設定操作影片 part2.mp4</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EfPRpEEeDG5GiUhiJvVtbbkBL3I5eJsre7J_wk2JOivJ_w?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=fJ15QD">w8_2a_s1511 設定操作影片 part3.mp4</a> (只有前段有聲音)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EbN6kKaMNqZFhbWxOLxJH8MBPTxN3vPo8u9ElJRe4AoPCA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=RNOXjB">w8 2a s1511 設定操作影片 part4.mp4</a></p>
<p>1)<span><span> </span>如何遠端登入</span>:</p>
<p>遠端登入到 s1511.cycu.org (只支援 IPv6 網路協定), 命令列指令 ssh client, 工具可以使用 Putty</p>
<p>使用 ssh 指令: ssh 帳號@s1511.cycu.org 然後輸入密碼 (鍵入密碼時螢幕並不會顯示字元)</p>
<p>使用 putty.exe 設定 session 令其連接到  s1511.cycu.org</p>
<p>登出指令為 exit</p>
<p>假如在 IPv4 網路協定下, 則 ssh 指令與 putty.exe 都必須透過能支援 IPv6 的代理主機進行連線.</p>
<p>2b w8 作業: 請根據 <a href="https://mde.tw/cadnote/downloads/cad2023_2b_w8.txt">cad2023_2b_w8.txt</a> 檔案中的內容, 透過程式的讀取與篩選, 按照時間先後, 列出 2b 修課學員中已經登入 s1511.cycu.org 的學號. (修課學員名單 <span>2a: </span><a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0838&amp;column=True">0838</a><span>, 2b: </span><a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0851&amp;column=True">0851</a>)</p>
<p>假如在近端處理, 必須同時儲存兩個檔案後, 進行資料選取:</p>
<p><a href="https://mde.tw/cadnote/downloads/get_stud_num_from_last_data.py">get_stud_num_from_last_data.py</a> (若採 Brython 編寫, 可以直接<a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/f9f2fd6819ae9553d51990901aa694073d51439a/get_stud_num_from_last_data.py">列出 2b w8 結果</a> (<a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/b38df54adfd23345dcf6e0888002ea14df165968/get_stud_from_2a_last.py">2a w8 結果</a>), 依照登入時間先後排序, 其中 41123227 為管理者最早測試時登入, 若採用 ANSI 編寫:<span> </span><a href="https://mde.tw/cadnote/downloads/c_parse_last_cp2023.7z">c_parse_last_cp2023.7z</a>)</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_502573">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py comments"># 讀取學號檔案</code></div>
<div class="line number2 index1 alt1"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">"2b_user_list.txt"</code><code class="py plain">, </code><code class="py string">'r'</code><code class="py plain">) as user_file:</code></div>
<div class="line number3 index2 alt2"><code class="py spaces">    </code><code class="py plain">user_lines </code><code class="py keyword">=</code> <code class="py plain">user_file.read().splitlines()</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="py comments"># 讀取 last 指令轉出的檔案, 以 last -w &gt; cad2023_2b_w8.txt 建立檔案</code></div>
<div class="line number6 index5 alt1"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">"cad2023_2b_w8.txt"</code><code class="py plain">, </code><code class="py string">'r'</code><code class="py plain">) as cad_file:</code></div>
<div class="line number7 index6 alt2"><code class="py spaces">    </code><code class="py comments"># 以下是利用跳行符號, 將每一行區隔成數列</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">    </code><code class="py plain">cad_lines </code><code class="py keyword">=</code> <code class="py plain">cad_file.read().splitlines()</code></div>
<div class="line number9 index8 alt2"><code class="py comments">#print(cad_lines)</code></div>
<div class="line number10 index9 alt1"> </div>
<div class="line number11 index10 alt2"><code class="py comments"># 從 cad_lines 建立所有登入使用者數列</code></div>
<div class="line number12 index11 alt1"><code class="py plain">login_users </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number13 index12 alt2"><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py plain">cad_lines:</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">    </code><code class="py plain">line_list </code><code class="py keyword">=</code> <code class="py plain">i.split(</code><code class="py string">" "</code><code class="py plain">)</code></div>
<div class="line number15 index14 alt2"><code class="py spaces">    </code><code class="py plain">login_users.append(line_list[</code><code class="py value">0</code><code class="py plain">])</code></div>
<div class="line number16 index15 alt1"><code class="py comments">#print(login_users)</code></div>
<div class="line number17 index16 alt2"> </div>
<div class="line number18 index17 alt1"><code class="py comments"># 根據 https://stackoverflow.com/questions/480214/how-do-i-remove-duplicates-from-a-list-while-preserving-order</code></div>
<div class="line number19 index18 alt2"><code class="py comments"># 數列去除重複元素但仍保持原始次序</code></div>
<div class="line number20 index19 alt1"><code class="py plain">login_users </code><code class="py keyword">=</code> <code class="py functions">list</code><code class="py plain">(</code><code class="py functions">dict</code><code class="py plain">.fromkeys(login_users))</code></div>
<div class="line number21 index20 alt2"><code class="py comments">#print(login_users)</code></div>
<div class="line number22 index21 alt1"> </div>
<div class="line number23 index22 alt2"><code class="py comments"># 建立數列存放符合條件的使用者</code></div>
<div class="line number24 index23 alt1"><code class="py plain">valid_users </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number25 index24 alt2"> </div>
<div class="line number26 index25 alt1"><code class="py comments"># 取出符合條件的使用者</code></div>
<div class="line number27 index26 alt2"><code class="py keyword">for</code> <code class="py plain">line </code><code class="py keyword">in</code> <code class="py plain">login_users:</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py string">"cad"</code> <code class="py keyword">in</code> <code class="py plain">line:</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">        </code><code class="py comments"># 將 cad 字串去除</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">        </code><code class="py plain">user_number </code><code class="py keyword">=</code> <code class="py plain">line.replace(</code><code class="py string">"cad"</code><code class="py plain">, "")</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py plain">user_number </code><code class="py keyword">in</code> <code class="py plain">user_lines:</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">            </code><code class="py plain">valid_users.append(user_number)</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">            </code> </div>
<div class="line number34 index33 alt1"><code class="py comments"># 利用 reverse() 將 valid_users 反向排序</code></div>
<div class="line number35 index34 alt2"><code class="py plain">valid_users.reverse()</code></div>
<div class="line number36 index35 alt1"> </div>
<div class="line number37 index36 alt2"><code class="py comments"># , 最早登入者列在最前面</code></div>
<div class="line number38 index37 alt1"><code class="py keyword">for</code> <code class="py plain">user </code><code class="py keyword">in</code> <code class="py plain">valid_users:</code></div>
<div class="line number39 index38 alt2"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(user)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>2)<span><span> </span>如何取放檔案</span>:</p>
<p>利用 sftp 從 s1511.cycu.org 取下檔案畫面:</p>
<p><img alt="" height="114" src="https://mde.tw/cadnote/images/w8_2b_sftp_commands.png" width="400"/></p>
<p>進入對應的目錄之後, 以 pwd 確認所在目錄後, 以 get 取下檔案, 以 put 放上檔案, 例如: 進入 images 目錄後, 可以透過 get gd_ex1.png 取下圖檔, 若要將圖檔放入 images 目錄, 則只要確定 sftp 進入後, cd 到 images 目錄, 然後以 put gd_ex1.png 將圖檔送入.</p>
<p>3)<span><span> </span>如何與 github 帳號彼此信任</span>:</p>
<p>利用 ssh-keygen 在 .ssh 目錄建立 id_rsa 與 id_rsa.pub, 之後將 id_rsa.pub 登記到各自帳號下 settings 的 SSH and GPG keys 區域.</p>
<p><span>.ssh 目錄中的 </span><a href="https://mde.tw/cpnote/downloads/config">config</a><span>, 將 SSH session 名稱設為 github.com:</span></p>
<div>
<div class="syntaxhighlighter js" id="highlighter_221954">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">Host github.com</code></div>
<div class="line number2 index1 alt1"><code class="js plain">User git</code></div>
<div class="line number3 index2 alt2"><code class="js plain">Hostname github.com</code></div>
<div class="line number4 index3 alt1"><code class="js plain">ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>將 上列 config 送到帳號下的 .ssh 目錄之後, 就可以利用 github.com 作為 session, 從 github.com 取下 cad2023 倉儲, 並且已經具備 git push 的權限.</p>
<p>4)<span> </span><span>如何取下 cad2023</span>:</p>
<p>以 SSH 協定取下 cad2023 的指令:</p>
<p>git clone --recurse-submodules<span> </span><a href="mailto:git@github.com">git@github.com</a>:帳號/cad2023.git</p>
<p>接下來必須從 cad2023 取下 server.py 進行編輯, 放入自己分配到的 9xxx 埠後, 再送回.</p>
<p>5)<span><span> </span>如何啟動或關閉 cad2023 倉儲</span>:</p>
<p>當使用者已經將上述 public key 登錄到 Github 帳號下, 且已經將 server.py 中的 9xxx 改為自己所分配到的內部埠號後再送回, 則可以利用 python3 server.py 啟動編輯網站, 並測試是否可以連線到<span> </span><a href="https://s1511.cycu.org:8xxxx">https://s1511.cycu.org:8xxxx</a></p>
<p>由於管理者內建密碼為 admin, 使用者修改後, 編碼字串將存入 config/config, 此檔案必須設為只有管理者可以 read, 若目前位於登入後的工作目錄, 則其指令為:</p>
<p>chmod og-rwx config/config</p>
<p>表示要將 others 與 group 針對 config/config 檔案的 read, write 與 execute 權限取消.</p>
<p>若希望使用者登入後動態網站仍然執行, python3 server.py&amp;</p>
<p>當 server.py 已經啟動, 使用者登入後可以利用以下指令, 列出各使用者啟動網頁編輯所對應的 PID (Process ID):</p>
<p><span>ps -axo pid,comm,uname | grep "python3"</span></p>
<p>各用戶若希望刪除已經啟動的 Process, 可以找到所啟動的 PID 後, 以下列指令關閉服務 (若 PID = 1234):</p>
<p>kill 1234</p>
<p>其中, 系統管理者可以刪除所有 Processes, 而各用戶只能刪除各自所啟動的 Process.</p>
<p>6)<span><span> </span>如何連結到動態網站</span>:</p>
<p>python3 server.py 啟動測試是否可以連線到<span> </span><a href="https://s1511.cycu.org:8xxxx">https://s1511.cycu.org:8xxxx</a></p>
<p>編輯網站啟動之後, 使用者登入後可以透過 config 指令修改管理者密碼, 而此一密碼的編碼將存入 s1511 主機倉儲檔案中的 config/config 檔案中, 且此一檔案將只會位於 s1511, 而不會被推向 github.com (因為 .gitignore 的設定).</p>
<p>當使用者決定要進行 git add 與 git commit 之前, 必須先以 git config 設定 user.name 與 user.email, 此設定將會存入 .gitconfig 檔案中.</p>
<p>7)<span><span> </span>如何設定靜態網站</span>:</p>
<p>前面已經在 /home/帳號/倉儲目錄 透過 SSH 協定從 github.com 取下檔案內容, 由於 SSH keys 的設定, 此一倉儲一旦改版, 可以在新增提交之後, 可以透過 git push 指令將改版資料推向 github.com.</p>
<p>當倉儲的靜態網站 git push 至 github.com 後, 將會透過 Github Pages 的設定進行轉檔.</p>
<p>若使用者希望在 s1511 主機中伺服對應的倉儲靜態網站, 則可以將倉儲檔案放入帳號中的 public_html 目錄中.</p>
<p>由於位於 public_html 僅需鏡射位於 github.com 中的倉儲檔案資料, 並不作為 git commit 與 git push 之用, 因此可以利用 git clone --recurse-submodules https://github.com/帳號/倉儲名稱.git 取下 (也就直接以 https 協定取下倉儲內容), 並可在 https://s1511.cycu.org/~帳號/倉儲名稱 中擷取靜態網站資料.</p>
<p>8)<span> </span><span>如何連動動態網站改版與靜態網頁:</span></p>
<p>當每次 /home/帳號/倉儲 中的檔案改版, 而且資料已經推送到 github.com, 使用者就可以進入 public_html 中的對應倉儲目錄, 以 git pull 指令從 github.com 取得最新的版本資料, 此指令可以採手動, 也可以設法納入倉儲的 acp 指令中:</p>
<p>acp 必須納入 public_html 目錄中的靜態網站 git pull, 且利用 chmod u+x acp 令其可以執行.</p>
<p><a href="https://mde.tw/cadnote/downloads/acp">acp</a><span> </span>內容:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_435313">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js preprocessor">#! /bin/bash</code></div>
<div class="line number2 index1 alt1"><code class="js plain">git add .</code></div>
<div class="line number3 index2 alt2"><code class="js plain">git commit -m </code><code class="js string">"$1"</code></div>
<div class="line number4 index3 alt1"><code class="js plain">git push</code></div>
<div class="line number5 index4 alt2"><code class="js plain">cd ./../public_html/cad2023</code></div>
<div class="line number6 index5 alt1"><code class="js plain">git pull</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>9)<span><span><span> </span>如何對資料進行保全:</span></span></p>
<p>chmod u+x acp</p>
<p>chmod og-rwx config/config</p>
<p>chmod 711 /home/cad學號</p>
<p>chmoe 755 /home/cad學號/public_html</p>
<p>假如自己所分派到的網路 port 遭到占用, 可以利用下列指令查出使用該埠號的使用者帳號:</p>
<p>例如要查詢埠號 9210 埠號的使用情形, 指令為 <span>lsof -i :9210, 其中 ls 為 list, of 為 open file, -i 中的 i 為 internet, :9210 表示要求列出與 port 9210 有關 internet 使用相關的資料.</span></p>
<p>10)<span><span> </span>網路連線協定:</span></p>
<p>將 cad2023 倉儲資料取到 s1511.cycu.org 帳號下, 若使用 SSH 協定且位於只有 IPv6 網路協定, 則分別牽涉以 SSH 及 https 協定連線到 github.com 的設定.</p>
<p>其中所謂運用 SSH 協定與 github.com 連線, 運用在 git clone --recurse-submodules<span> </span><a href="mailto:git@github.com:%E5%B8%B3%E8%99%9F/cad2023.git">git@github.com:帳號/cad2023.git</a><span> </span>因為其流程是利用 SSH 協定以 git 作為帳號登入到 session 名稱為 github.com 的連線主機 (即 config 中的 Hostname 設定), 能不能遠端登入則取決於 github.com session (即 config 設定檔案中的 Host 名稱) 後面的帳號是否已經登錄與目前 .ssh/id_rsa 所對應的 public key.</p>
<p>至於在純 IPv6 網路下的 s1511.cycu.org 其 https 所需的 proxy 設定, 已經由管理者設定於 /etc/environment 中, 因此所有使用者都無需設定.</p>
<h2>W9~W11</h2>
<p>w10 網路狀態: 目前似乎從學校電腦無法使用 hinet 的 IPv6 DNS 伺服器. 驗證方式: 在命令列中輸入 nslookup, 然後以 server 2001:b000:168::1 指令將 DNS 設為中華電信的符號名稱伺服器, 然後查詢 google.com.</p>
<p>因應方法: 使用機械設計系所建立的 DNS 伺服器, 140.130.17.3 以及<span> </span><span>2001:288:6004:17::3</span></p>
<p>無法使用中華電信 DNS 原因: 應該是學校網管修改設定, 禁止跨區設定 DNS 伺服器.</p>
<p>w10 Ubuntu 問題: 22.04 版更為最新後, netplan 在無 openvswitch 啟動的情況下無法更新設定.</p>
<p>先處理 /etc/netplan/net.yaml 中 DNS 伺服器改為系上主機, 在無法使用 sudo netplan apply 更新 /etc/netplan/net.yaml 設定之前, 可以查詢 /etc/environment 中是否使用 IPv6 address 進行設定 http_proxy 與 https_proxy 變數. 或者修改 /etc/resolv.conf 中的 nameserver 設定, 讓 net.yaml 中的 DNS 設定可以運作. 且利用<span> </span><span>sudo apt install openvswitch-switch</span><span> </span>安裝並執行 netplan 所需的服務 (其實是 bug, 但為了能讓 netplan 正常運作的權宜之策).</p>
<p>有關電腦輔助設計室網路設定:</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ESCcmplVTVxJnJYZ2pJWh-oBFWsDJxxSYzVh_5LD5Oa5Gg?e=1EysLk">w10_2b_cadlab_network_setting.7z</a><span> </span>(需要下載密碼) - 電腦輔助設計室網路設定批次與 Powershell 檔案.</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EV5P-1cv-y1Ih5zFT9LyTy0B6vGwNfDVlXYescPWAcMliw?e=LTUnq7">tinyc.7z</a><span> </span>(需要下載密碼) - 使用 Tiny C Compiler 編譯 C 程式, 包含 gd 與 gnuplot.</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EYLeiM_NMzFHiKnUWpcO9pwBHxwDNjNDC-4F3h_d761wMQ?e=NMdPpv">python3114_git_putty.7z</a><span> </span>(需要下載密碼) - 將近端 cmsimde 啟動並改版後推向 Github 所需的檔案.</p>
<hr/>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EX45YrR81S1AlJn3EmMISXcBI-ETlNSLSridchdKq4XjTA?e=GYp3x9">creo 10 安裝流程的 wink 專案檔案下載</a><span> </span>(需要密碼)</p>
<p>有關線上簡報、網誌與多媒體影片製作工具, 請參考:<span> </span><a href="https://mde.tw/cpnote/content/w10.html">https://mde.tw/cpnote/content/w10.html</a></p>
<p>有關學習計算機程式與電腦輔助設計相關課程的心態與方法, 請參考<a href="https://mde.tw/cpnote/content/%E4%B8%8A%E8%AA%B2%E5%85%A7%E5%AE%B9.html">這裡</a>的說明.</p>
<p>因為 Python 3.12.0 環境下 Leo Editor 還無法正常透過 pip 安裝, 因此必須手動安裝 PyQt5 之後, 再使用 pip install leo, 所完成的 Python 3.12.0: <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EYf6RiAqXAFJllAizi_-iZ4BT9ZEn8-bT2V8TVjd9p446Q?e=NSCciC">Python312_leo_664_PyQt5.7z</a><span> </span>(需要下載密碼)</p>
<p>有關口頭報告 (oral presentation):</p>
<p><a href="https://softwarekeep.com/help-center/compare-powerpoint-revealjs">PowerPoint vs reveal.js: Choosing Presentation Tools (softwarekeep.com)</a> </p>
<p><a href="https://ithelp.ithome.com.tw/articles/10185467">https://ithelp.ithome.com.tw/articles/10185467</a> </p>
<p>cad2023 倉儲中的 reveal.js: <a href="https://mde.tw/cadnote/reveal/">https://mde.tw/cadnote/reveal/</a> </p>
<p>有關永動機運動模擬玩具 (perpetual motion simulator toy):</p>
<p>CAD 零組件繪圖</p>
<p>原型製作前的系統模擬與製程規劃</p>
<p>如何學習 CoppeliaSim:</p>
<p>透過閱讀 <a href="https://mde.tw/pjcopsim">https://mde.tw/pjcopsim</a> 中的 tutorial 與相關指令說明後, 實際操作測試並在個人網頁中記錄各項功能的使用方法.</p>
<p>進入 CoppeliaSim<span> </span><a href="https://forum.coppeliarobotics.com/">Forum</a>, 搜尋相關討論或發問.</p>
<p><a href="https://forum.coppeliarobotics.com/viewtopic.php?t=9533">Arduino code to CoppeliaSim</a><span> </span>展示. (<a href="https://bitbucket.org/afaina/horosim/">Horosim</a>,<span> </span><a href="https://github.com/mdecycu/horosim">備份</a>), 更早的<a href="https://forum.arduino.cc/t/using-v-rep-to-simulate-an-arduino-sketch/208718/2">討論</a>. 虛實整合:<span> </span><a href="https://www.youtube.com/watch?v=ZJQV2FlGFBo">1</a>,<span> </span><a href="https://www.youtube.com/watch?v=Nsgt8YPSDpU">2</a>,<span> </span><a href="https://github.com/mdecycu/pj5083/releases/tag/v0.0.80">3</a>.</p>
<p>有關鋼球平衡台 (steel ball balancing platform):</p>
<p>有關虛實整合彈珠台 (cyber-physical pinball table):</p>
<h2>W12</h2>
<p><a href="https://mde.tw/cadnote/downloads/2b_w12_seat.txt">2b_w12_seat.txt</a></p>
<p><a href="https://mde.tw/cadnote/downloads/2a_w12_seat.txt">2a_w12_seat.txt</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EfsKmsmwGvpIsOPXBLR7oQ8B6wHQ5Mv4ZMDoUF58oCbMKA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=8Ud0AR">w12_2b_1.mp4</a> (利用<a href="https://mde.tw/cadnote/reveal/index.html">簡報</a>說明最新的網路設定流程, 以及 w12 的課堂測驗內容)</p>
<p>校方的 DHCP6 並沒有正確設定系上的 IPv6 Gateway, 也沒有 DNS 伺服器設定, 使用者必須自行根據<a href="https://mde.tw/cadnote/content/links.html">所分配的固定 IPv6 位址</a>進行設定, 另外校方的 IPv6 DNS 伺服器也無法正常運作, 必須使用系上的 DNS server 設定.</p>
<p>Windows 網路查詢指令: ipconfig /all</p>
<p>DNS 伺服器查詢指令: nslookup</p>
<p>查詢至特定主機的路徑指令: tracert</p>
<p><a href="https://www.techrepublic.com/article/ten-windows-10-network-commands-everyone-one-should-know/">其他 Windows 常用的網路指令</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Ea0Ra-btAHRInBfS-sjp_JoBEuY1V4xwUhir0468_hHP2A?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=Pnaw0B">w12_2b_2.mp4</a><span> </span>(<span>利用</span><a href="https://mde.tw/cadnote/reveal/index.html">簡報</a><span>說明如何將座次表放到倉儲 downloads 目錄, 且將連結放入 w12 頁面)</span></p>
<p><span>利用人工或電腦輔助方法建立 w12 頁面中的班上學員座次表?</span></p>
<hr/>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Ed3IQ1_rfENBh9Tsp1R-m38BS2LwK68WisTRFG0BGu6Z9w?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=2AEohk">w12_2a_1.mp4</a><span> </span>(ssh-keygen 在 .ssh 建立 id_rsa 與 id_rsa.pub, 以 sftp 放入 config, 並利用 puttygent 將 id_rsa 轉為 .ppk 以便設立 session 用)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EffIMBDkQmNKjDFBFO5gi58Byn-NRKpmP9taiRYpKUeHiA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=rduneA">w12_2a_2.mp4</a><span> </span>(如何利用 ChatGPT 協助解決座位排序與列印問題)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/ESNd2rIyuQpMi2sKAz-OohcBZq2qz7mSGbzp2bW8EWzijg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=RoQWbr">w12_2a_3.mp4</a><span> </span>(有關 Solvespace 基本繪圖與轉檔, 最後說明如何利用 IPv6 相容的 Python 與 CoppeliaSim 進行互動)</p>
<p><span><span>使用 ChatGPT 協助處理</span>上述<a href="https://mde.tw/cadnote/reveal/index.html#/8">問題一</a>:</span></p>
<p><span>輸入1: (在雙引號之後, 直接將檔案內容複製貼上, 作為輸入內容)<br/></span></p>
<p><span>請利用 Python 讀取下列檔案名稱為 2b_w12_seat.txt "2b stud num    seat<br/>41123201    <br/>41123202    (3,8)<br/>41123203    (3,7)<br/>41123204    (6,8)<br/>~~~ 中間資料沒有列出來<br/>41136124    (3,2)<br/>41136126    <br/>41136131    "</span></p>
<p><span>ChatGPT 回覆1:</span></p>
<p><span>要讀取這個檔案，你可以使用 Python 的檔案處理功能。以下是一個基本的範例程式碼，可以協助你達成這個目標：</span></p>
<p><span><a href="https://mde.tw/cadnote/downloads/w12_chatgpt_prob1_ans1.py">w12_chatgpt_prob1_ans1.py</a></span></p>
<p><span>這個程式碼會將學號和座位號的對應關係存儲在一個字典中，然後顯示出來。請注意，這裡使用 strip() 方法來去除空格和換行符號。<br/><br/>請確保你的檔案路徑正確，並注意檔案的編碼，以確保正確讀取中文內容。</span></p>
<p><span>討論1: 經執行 ChatGPT 回覆的程式, 已經可以讀取資料, 並且列出資料. 但資料沒有排序.</span></p>
<p><span>輸入2:</span></p>
<p><span>假如前面程式中的座位號第一個 index 代表"列"而第二個 index 代表行, 請延續上個程式, 由左到右作為每一列的順序, 而且希望陣列排序是列出該位置上的學員學號</span></p>
<p><span>ChatGPT 回覆2:</span></p>
<p><span>了解，如果要按照座位號的列和行來排序並列出每個位置上的學號，我們可以修改程式碼來實現。以下是修改後的程式碼：</span></p>
<p><span><a href="https://mde.tw/cadnote/downloads/w12_chatgpt_prob1_ans2.py">w12_chatgpt_prob1_ans2.py</a></span></p>
<p><span>這裡我們使用了 sorted 函數，並通過 key 參數指定排序規則，即按照列和行的順序進行排序。最後，我們顯示排序後的結果，列出每個位置上的學號。</span></p>
<p><span>討論2: 經執行 ChatGPT 回覆的程式, 所讀取的資料已經排序.<br/></span></p>
<hr/>
<p><span>輸入3:</span></p>
<p><span>假如 "2b_w12_seat.txt" 可以從 "https://mde.tw/cadnote/downloads/2b_w12_seat.txt" 這個網址讀取, 而且希望將上一個 Python 程式改用 Brython 編寫, 要如何修改?</span></p>
<p><span>ChatGPT 回覆3:</span></p>
<p><span>Brython 是一個允許在瀏覽器中運行 Python 3 代碼的工具，而在瀏覽器中讀取外部檔案通常會涉及到跨網域 (Cross-Origin) 的問題。為了避免這些問題，我們可以使用 JavaScript 來在瀏覽器中讀取檔案，然後將檔案內容傳遞給 Brython。以下是修改後的 Brython 程式碼：</span></p>
<p><span>(因為我們不使用 ChatGPT 混用 Javascript 與 Brython 的建立, 所以此地<span>不列出其回覆的原始碼</span>)</span></p>
<p><span>這個 HTML 文件引入了 Brython，然後使用 JavaScript 的 XMLHttpRequest 將檔案內容從指定的 URL 讀取並傳遞給 Brython 的 eval 函數。在 eval 函數中執行 Python 代碼。這樣就可以在瀏覽器中運行 Python 代碼，同時解決了跨網域的問題。請注意，這裡假設檔案是文本格式，如果是二進制檔案，需要進一步處理。</span></p>
<p><span>討論3: ChatGPT 建議的程式或許也能達成目的, 但是混用 Javascript 與 Brython 並不是目前所需, 因此不採用.<br/></span></p>
<hr/>
<p><span>輸入4:</span></p>
<p><span>假如我們已經知道 Brython 可以利用 open(https://mde.tw/cadnote/downloads/2b_w12_seat.txt).read() 或 open(https://mde.tw/cadnote/downloads/2b_w12_seat.txt).readlines() 讀取到檔案, 可以將上一個程式全部改用 Brython 完成嗎?</span></p>
<p><span>ChatGPT 回覆4:</span></p>
<p><span>是的，如果你已經知道 Brython 可以使用 open("https://mde.tw/cadnote/downloads/2b_w12_seat.txt").read() 或 open("https://mde.tw/cadnote/downloads/2b_w12_seat.txt").readlines() 讀取檔案，你可以將上述 Python 程式碼轉換為 Brython 程式碼。以下是修改後的程式碼：</span></p>
<p><span><a href="https://mde.tw/cadnote/downloads/w12_chatgpt_prob1_ans3_brython.py">w12_chatgpt_prob1_ans3_brython.py</a><span> </span>(這裡已經配合 cmsite 中的 Brython 環境, 可以<a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/f49f1b9fd28ac6545fb3158eae6960a72c2a61f5/w12_chatgpt_prob1_ans3_brython.py">直接從 Gist 取出執行</a>)</span></p>
<p><span>這個 HTML 文件使用 Brython 在瀏覽器中運行 Python 3 代碼。Brython 的 open 函數會模擬 Python 的 open 函數，讓你能夠在瀏覽器中讀取檔案。這樣就可以使用和在 Python 中一樣的方式處理檔案，同時在瀏覽器中運行。</span></p>
<p><span>討論4: ChatGPT 因為帶有非常大量的邏輯變數, 因此詢問時若能給予明確指示, 將可能取得更有用的回答.</span></p>
<p><span>接下來就可以延續上述回覆所得到的程式碼, 加以研究後再修改為其他格式的資料輸出, 例如:<span> </span><span>直接在 Brython 執行</span></span><span><span>後, 列出所需要的 html 物件</span>.</span></p>
<h2>W13-W14</h2>
<p>利用 ChatGPT 對話所完成的 2a 座位排序程式:<span> </span><a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/6aa687555226885c935927bffaab3f9a81b513a3/w13_2a_seat_html.py">w13_2a_seat.py 執行結果</a></p>
<p>利用 "<span><span>sudo update-rc.d stunnel4 defaults</span>" 將 s.cycu.org 中的 stunnel4 設為與系統同步啟動.</span></p>
<p><span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/ETnGCokBJEBDiHCDLWwxy8YBjtgKonVWSh1jrh3jz7Wong?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=Uwcy3c">w13_2b_1.mp4</a></span><span> </span>(說明如何利用 ChatGPT 協助利用 Python 程式列出各組學員座位表)</p>
<p>接下來請根據下列步驟測試如何在 CoppeliaSim 場景中利用感測器偵測, 並對特定物件施力:</p>
<p>第一步:</p>
<p>下載支援 IPv6 網路協定版本<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EfEaYO4E4eBGtTV3QBCP0f0B3JBfrw11LslWmQyqZB75fw?e=Zf7hCp">CoppeliaSimEdu_4.5.1_rev4_for_cd2023.7z</a><span> </span>(需要下載密碼)</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/">CoppeliaSim 使用者手冊</a>,<span> </span><a href="https://mde.tw/pjcopsim">CoppeliaSim 4.3.0 使用手冊網站</a></p>
<p>第二步:</p>
<p>與 ChatGPT 對話時, 可以利用 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EVV3NaesdDdNqcoD3xAo96gBqGG4gEJFPknOIt7EfofGlg?e=OfQ4qo">zmqRemoteAPI Python for cad2023.7z</a><span> (需要下載密碼) 中的 ZMQ Remote API Python 程式作為 Template, 探討如何設置感測器, 在正確時間對剛球施力.</span></p>
<p><span>第三步:</span></p>
<p><span>實際操作 CoppeliaSim 鋼球永動模擬器電腦輔助設計三個階段: 建立模型零組件 - 轉入機電模擬系統 - 根據實際物理條件設置機電系統. </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ERR-gLqBjsVGnW2-VYSvtl4BXpNVbocA2nWvmeJyXkyJqw?e=KX2Pw0">perpetual_motion_simulator_project_cad2023.7z 下載</a><span> (需要密碼)</span></p>
<p><span>請各組學員將上列三個步驟的執行, 以 Wink 操作影片放入個人與分組網站中的 w13 頁面.</span></p>
<p><span><span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EYTdI7L4kI5ApCWjsCQowHMBybVYL3E2ngKl_5KDaQb_VQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=JLlhSo">w13_2b_2.mp4</a></span><span> </span>(有關上列操作步驟的說明)</span></p>
<p><span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EaCzkiH3xOJBjGeRQmf7F8cBuSE_O3rneWodiUj_awBEoQ?e=sgrIVu">triangle_solvespace_coppeliasim_ex1.7z</a><span> </span>(利用 Solvespace 建立 V 形軌道, 希望建立較簡單的鋼球永動模擬系統)</span></p>
<h4><span>w14</span></h4>
<p><span><span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EdTvQFLz9ORIvOpqIp2j9ksB27IKT33UdpCv191NyCfeRg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=p2fuhU">w14_2b_1.mp4</a></span><span> </span>(說明如何簡化專案一, 讓鋼球直接在兩個三角形斜面上進行永動模擬)</span></p>
<p><span><span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EeZRAni37_9MkbFXp-ljG18BfLnBf2b1IXtmFcmItIxrcQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=QxuFX1">w14_2b_2.mp4</a></span><span> </span>(延伸三角形斜面對鋼球施力的模式, 套用到 2d 的永動模擬器)</span></p>
<p><span><span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EY6ZM8Ic90hCp7sbYupfBxgBuxQvw185dPJgqgTrgyMJ6A?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=wRFLks">w14_2a_1.mp4</a></span><span> </span>(延伸三角形斜面對鋼球施力的模式, 套用到 2d 的永動模擬器)</span></p>
<p><span><span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZ_4sXrhtuhMtDhuEahtg7YBe2ywD9DpUeTjxddtvSspWA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=ZsuiHX">w14_2b_2.mp4</a></span><span> </span>(說明如何執行 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EamUYeAjSnVKgx3ATSb-hrsBtERV-wRSjvppA91Yr2dDLg?e=lHhWxS">project1_w14_simple.7z</a> (電磁力吸引) 的控制程式)</span></p>
<p><span>專案一 Perpetual Motion Simulator 永動模擬器:</span></p>
<p><span><a href="https://mde.tw/cadnote/downloads/cad2023_w14.7z">cad2023_w14.7z</a><span> </span>(需要透過控制系統設計找出能讓鋼球通過感測器時的最佳施力大小)</span></p>
<p><span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EamUYeAjSnVKgx3ATSb-hrsBtERV-wRSjvppA91Yr2dDLg?e=lHhWxS">project1_w14_simple.7z</a><span> </span>(電磁力吸引)</span></p>
<p><span><a href="https://mde.tw/cadnote/downloads/cad2023_w14_perpetual_motion_simulator_template.py">cad2023_w14_perpetual_motion_simulator_template.py</a></span></p>
<p><span><img alt="" height="299" src="https://mde.tw/cadnote/images/w14_pms_coppeliasim.gif" width="400"/></span></p>
<p><span>設置感測器與 ZMQ remote API python 施力程式後:<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EUiiLugwa6NBsU6ukQ0cPpUBYFaROJ1AgN-4Zj8L0HbYpg?e=9Hqydk">triangle_perpetual_motion_simulator.7z</a></span></p>
<p><span><img caption="false" height="218" src="https://mde.tw/cadnote/images/triangle_perpetual_motion_simulator.gif" width="400"/><br/></span></p>
<hr/>
<p><span>專案二:</span></p>
<p><span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EcRiRKiMlfZJj5yKxGHvrLEBC65WeOu5yKBLv4N2GxXR9Q?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=XKemgz">w14_2a_3.mp4</a></span><span> </span>(準備進入專案二)</p>
<p><span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EcpVbx06cPVMreEhd2VeMhoBtpdeT4CtwVo9H9-EMWXcuQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=jf8uWH">w14_2a_4.mp4</a></span><span> </span>(從 CAD 以 STL 將零組件轉入 CoppeliaSim 的注意事項)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EdwFrvCUfHFIoHf7iYscw60By7HKX-sRd4SUnp9FFkEN6g?e=Mx7HkN">1d_ball_balancing_get_distance.7z</a> 中的 Solvespace 組立件其座標為 Y 軸向上, 但 CoppeliaSim 場景中的絕對座標則為 Z 軸向上, 因此將 Solvespace 組立件轉入時, 必須選擇 Z 軸向上, 而且必須設法將所有零件的座標以自有的中心座標為準)</p>
<p><span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EVgbmKwN6PZCpqaVyKp-NxoBTQMQhcfDgVfS4-xKiZ02xA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=2WQ4YG">w14_2b_3.mp4</a></span><span> </span>(說明如何利用 zmq Remote API 程式取得下列場景中鋼球與感測器間的距離)</p>
<p><img alt="" height="375" src="https://mde.tw/cadnote/images/1d_ball_balancing_get_distance.png" width="400"/></p>
<p><span>參考資料:</span></p>
<p><a href="https://wikis.utexas.edu/display/RMD/Home+-+Robot+Mechanisms+Design">https://wikis.utexas.edu/display/RMD/Home+-+Robot+Mechanisms+Design</a> </p>
<p>以 API<span> </span><a href="https://forum.coppeliarobotics.com/viewtopic.php?t=8106">改變重力</a>:</p>
<p>sim.setArrayParameter(sim.arrayparam_gravity,{gx,gy,gz}).</p>
<p><a href="https://forum.coppeliarobotics.com/viewtopic.php?t=8190">set initial velocity</a>:</p>
<p>sim.setObjectFloatParameter(objectHandle,X,y), where X can be sim.shapefloatparam_init_velocity_x, sim.shapefloatparam_init_velocity_y or sim.shapefloatparam_init_velocity_z, and y the initial velocity in that direction</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/en/regularApi/simGetObjectVelocity.htm">get object velocity</a>:</p>
<p>list linearVelocity, list angularVelocity = sim.getObjectVelocity(int objectHandle)</p>
<p>Reinforcement Learning:</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/en/PyRep.htm">https://www.coppeliarobotics.com/helpFiles/en/PyRep.htm</a></p>
<p><a href="https://github.com/chauby/CoppeliaSimRL">https://github.com/chauby/CoppeliaSimRL</a></p>
<p><a href="https://deepreinforcementlearningbook.org/docs/Chap%2016.%20Robot%20Learning%20in%20Simulation/">Deep RL</a><span> </span>(<a href="https://link.springer.com/book/10.1007/978-981-15-4095-0">ebook on Springer</a>)</p>
<p><a href="https://github.com/moliqingwa/coppeliasim_deeprl">https://github.com/moliqingwa/coppeliasim_deeprl</a></p>
<h2>W15</h2>
<p><span>操作考試</span>: 請利用自選的電腦輔助設計套件建立<span> </span><a href="https://mde.tw/cadnote/content/pms.html">https://mde.tw/cadnote/content/pms.html</a>  中的零組件 (尺寸與操控內容請自訂), 並加入感測器與適當的設計元件或機構, 說明預計如何令其在接上外部電源後, 能夠讓系統中的鋼球在軌道上進行永動模擬.</p>
<p>完成零組件與可行系統設計後, 請將零組件轉入 CoppeliaSim 建立模擬場景, 並在分組中自選另一名組員, 經過彼此討論後, 請利用 ZMQ remote API Python 程式互相控制對方的永動模擬場景, 以便完成兩人一組的兩則永動機模擬操作 (若找不到協同對象, 請自行用所分配到的 IPv6 位址進行控制模擬).</p>
<p>完成上述兩人一組的現場操作考試後, 請利用 Wink 製作 MP4 操作影片, 說明從零組件繪圖至完成互動控制模擬後的各階段細節, 並將上述各項內容放入個人倉儲與網站 (頁面標題請用第一階設定, 名稱為 exam).</p>
<p>step1: 基本零組件設計繪圖.</p>
<p>step2: 施力機構設計, 納入軌道下方控制盒中.</p>
<p>step3: 將軌道、鋼球與簡化後的控制盒輸入 CoppeliaSim.</p>
<p>step4: 配合控制系統設計, 納入感測器與施力機構或系統.</p>
<p>step5: 在 localhost 以 IPv6 ZMQ remote API Python 程式, 配合感測器作動對鋼球施力.</p>
<p>step6: 跨網路對協同組員的場景進行控制模擬.</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" data-mce-fragment="1" frameborder="0" height="315" src="https://www.youtube.com/embed/O-FKcK0vzgY?si=Ci-reYmxMRDYzUZN" title="YouTube video player" width="560"></iframe></p>
<p>截至 2023.12.22 Replit 仍可用來維護 Github 倉儲中的對應網站內容, 且可透過下列 html 將 Repl 嵌入網頁中:</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_358783">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">&lt;</code><code class="html keyword">iframe</code> <code class="html color1">frameborder</code><code class="html plain">=</code><code class="html string">"0"</code> <code class="html color1">width</code><code class="html plain">=</code><code class="html string">"100%"</code> <code class="html color1">height</code><code class="html plain">=</code><code class="html string">"400"</code> <code class="html color1">src</code><code class="html plain">=</code><code class="html string">"https://replit.com/@wcms/cadnote?embed=true"</code><code class="html plain">&gt;&lt;/</code><code class="html keyword">iframe</code><code class="html plain">&gt;</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><iframe data-mce-fragment="1" frameborder="0" height="400px" src="https://replit.com/@wcms/cadnote?embed=true" width="100%"></iframe></p>
<p><span>例如要查詢埠號 9210 埠號的使用情形, 指令為 </span><span>lsof -i :9210, 其中 ls 為 list, of 為 open file, -i 中的 i 為 internet, :9210 表示要求列出與 port 9210 有關 internet 使用相關的資料.</span></p>
<p>利用 s.cycu.org 維護 github.com 上的倉儲與網站內容的說明在: <a href="https://mde.tw/cadnote/content/w8.html">https://mde.tw/cadnote/content/w8.html</a> </p>
<h2>coppeliasim</h2>
<p>原始碼:</p>
<p><a href="https://github.com/CoppeliaRobotics">https://github.com/CoppeliaRobotics</a> </p>
<p>核心程式庫:<span> </span><a href="https://github.com/CoppeliaRobotics/CoppeliaSimLib">https://github.com/CoppeliaRobotics/CoppeliaSimLib</a></p>
<p>採商業與教育版授權原始碼:</p>
<p><a href="https://github.com/CoppeliaRobotics/simGeom">https://github.com/CoppeliaRobotics/simGeom</a></p>
<p><a href="https://github.com/CoppeliaRobotics/simIK">https://github.com/CoppeliaRobotics/simIK</a></p>
<p><a href="https://github.com/CoppeliaRobotics/coppeliaGeometricRoutines">https://github.com/CoppeliaRobotics/coppeliaGeometricRoutines</a></p>
<p><a href="https://github.com/CoppeliaRobotics/coppeliaKinematicsRoutines">https://github.com/CoppeliaRobotics/coppeliaKinematicsRoutines</a></p>
<p>範例場景:<span> </span><a href="https://github.com/CoppeliaRobotics/scenes">https://github.com/CoppeliaRobotics/scenes</a></p>
<p>範例模型:<span> </span><a href="https://github.com/CoppeliaRobotics/models">https://github.com/CoppeliaRobotics/models</a></p>
<p>使用者手冊:</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/index.html">https://www.coppeliarobotics.com/helpFiles/index.html</a><span> </span>(以 Google<span> </span><a href="https://www-coppeliarobotics-com.translate.goog/helpFiles/index.html?_x_tr_sl=en&amp;_x_tr_tl=zh-TW">翻譯為中文</a>)</p>
<p><a href="https://mde.tw/pjcopsim">https://mde.tw/pjcopsim</a><span> </span>(<a href="https://github.com/mdecycu/pjcopsim">倉儲</a>,<span> </span><a href="https://mde.tw/content/pjcopsim.html">開發專案說明</a>)</p>
<p>ZeroMQ Remote API:</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/en/zmqRemoteApiOverview.htm">https://www.coppeliarobotics.com/helpFiles/en/zmqRemoteApiOverview.htm</a></p>
<p>Stepped mode:<span> </span><a href="https://www.coppeliarobotics.com/helpFiles/en/simulation.htm#stepped">https://www.coppeliarobotics.com/helpFiles/en/simulation.htm#stepped</a></p>
<p>Reference:</p>
<p><a href="http://wcm.cycu.org:88/github/cd2021/content/V-rep.html">http://wcm.cycu.org:88/github/cd2021/content/V-rep.html</a><span> </span>(只能在系上 IPv6 網段中連結)</p>
<p>利用 Leo Editor 解讀 CoppeliaSim 完整的 XML 檔案格式,<span> </span><a href="https://groups.google.com/g/leo-editor">Leo Editor Google Group</a></p>
<p>因為 Python 3.12.0 環境下 Leo Editor 還無法正常透過 pip 安裝, 因此必須手動安裝 PyQt5 之後, 再使用 pip install leo, 所完成的 Python 3.12.0: <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EYf6RiAqXAFJllAizi_-iZ4BT9ZEn8-bT2V8TVjd9p446Q?e=NSCciC">Python312_leo_664_PyQt5.7z</a><span> </span>(需要下載密碼)</p>
<hr/>
<p>因為 CoppeliaSim 4.5.1 之後的版本, 將設定存入操作系統的 <span>C:\users\%USERNAME%\AppData\Roaming\Coppeliasim 目錄中, 因此若使用過程曾經修改設定, 必須將設定複製到可攜環境的對應目錄中, 之後若需延續先前的設定, 就必須在可攜系統啟動時, 先將設定從可攜系統轉存進入操作系統的對應目錄, 批次檔案指令如下 (假設可攜系統使用 home_ipv6 目錄儲存 AppData 內容):</span></p>
<div>
<div class="syntaxhighlighter js" id="highlighter_696674">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">Xcopy %Disk%:\home_ipv6\AppData\Roaming\Coppeliasim C:\users\%USERNAME%\AppData\Roaming\Coppeliasim /E /H /C /I /Y</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h1>零組件繪圖</h1>
<h2>磁力吸引1</h2>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">盆子</span></span></p>
<p><img alt="" height="428" src="/images/螢幕擷取畫面 2023-11-15 210404.png" width="800"/></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">管子</span></span></p>
<p><img alt="" height="428" src="/images/螢幕擷取畫面 2023-11-15 210055.png" width="800"/></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">底座</span></span></p>
<p><img alt="" height="428" src="/images/螢幕擷取畫面 2023-11-15 210301.png" width="800"/></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">組合圖的前視圖</span></span></p>
<p><img alt="" height="428" src="/images/螢幕擷取畫面 2023-11-15 205401.png" width="800"/></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">柱子</span></span></p>
<p><img alt="" height="428" src="/images/螢幕擷取畫面 2023-11-15 210341.png" width="800"/></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">球體</span></span></p>
<p><img alt="" height="428" src="/images/螢幕擷取畫面 2023-11-15 210248.png" width="800"/></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">組合圖</span></span></p>
<p><img alt="" height="428" src="/images/螢幕擷取畫面 2023-11-15 205353.png" width="800"/></p>
<h2>斜軌道</h2>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">軌道</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><img alt="" height="433" src="/images/12283.jpg" width="800"/></span></span></p>
<p>底座</p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><img alt="" height="431" src="/images/12282.jpg" width="800"/></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">組合圖<img alt="" height="429" src="/images/12281.jpg" width="800"/></span></span></p>
<h2>w12 作業</h2>
<p><span><span><span><span>11/30 機械設計二乙 出席座位表</span></span></span></span></p>
<p><a href="https://41136103.github.io/cad2023/downloads/2b_w12_seat.txt">2b_w12_seat.txt</a></p>
<p><span>2b stud num seat<br/>41123201<br/>41123202 (3,8)<br/>41123203 (3,7)<br/>41123204 (6,8)<br/>41123205 (2,9)<br/>41123206 (3,4)<br/>41123207 (1,5)<br/>41123208 (2,3)<br/>41123209 (2,6)<br/>41123210 (4,3)<br/>41123211 (6,2)<br/>41123212 (1,7)<br/>41123213 (1,3)<br/>41123214 (4,1)<br/>41123215 (1,4)<br/>41123216 (6,9)<br/>41123217 (6,7)<br/>41123218 (4,5)<br/>41123219<br/>41123220 (1,1)<br/>41123221 (2,2)<br/>41123222 (3,9)<br/>41123223 (3,5)<br/>41123224 (4,2)<br/>41123226 (3,3)<br/>41123227 (3,6)<br/>41123228<br/>41123229 (5,2)<br/>41123230 (2,7)<br/>41123231 (1,2)<br/>41123232 (6,5)<br/>41123233 (2,8)<br/>41123234<br/>41123235 (5,1)<br/>41123236 (5,3)<br/>41123237 (1,9)<br/>41123238 (1,8)<br/>41123239 (4,8)<br/>41123240 (4,4)<br/>41123241 (5,7)<br/>41123243 (5,8)<br/>41123244<br/>41123245 (4,9)<br/>41123246 (5,6)<br/>41123247 (6，3)<br/>41123248<br/>41123249 (5,9)<br/>41123250 (5,5)<br/>41123251 (5,4)<br/>41132222 (6,4)<br/>41136103 (7,3)<br/>41136124 (3,2)<br/>41136126<br/>41136131</span></p>
<h1>系統模擬</h1>
<h2>磁力吸引2</h2>
<p><img alt="" src="/images/螢幕擷取畫面 2023-12-28 105436.png"/></p>
<h1>網路設定</h1>
<h2>Replit</h2>
<p><span>如何維護網頁?</span></p>
<p><span>1.在動態網站儲存更新的資料內容</span></p>
<p><span>2.轉為靜態網站</span></p>
<p><span>3.回到replit點擊Git</span></p>
<p><span>4.在update輸入框中輸入剛更新的內容的代稱</span></p>
<p><span>5.點選stage&amp;commit(內容即在載入)</span></p>
<p><span>6.最後點擊push推上去</span></p>
<p><span>7.到github個人倉儲看是否為綠燈</span></p>
<p><span></span></p>
<h2>s1511</h2>
<p><span>1.開啟ssh_cad學號.bat</span></p>
<p><span>2.輸入密碼(在學校email有)</span></p>
<p><span>3.</span><span>進入 cad2023</span></p>
<p><span>4.輸入python3 server.py</span></p>
<p><span>5.成功執行，進入</span><a href="https://s1511.cycu.org:8xxxx">https://s1511.cycu.org</a><span>:分配到的外部</span><span>埠</span><span>號</span></p>
<p><span>6.登入進去並且進行更新</span></p>
<p><span>7.更新完轉靜態(convert)，按下acp並且輸入備註</span></p>
<p><span>8.到github個人倉儲看是否為綠燈</span></p>
<h2>localhost</h2>
<h1>課程總結</h1>
<h2><span>編寫總結報告</span></h2>
<p>在軟體開發的過程中，有效的協作和版本控制是不可或缺的。GitHub作為一個廣泛使用的版本控制平台，提供了便捷的協作和代碼管理工具。最近，我開始使用Replit這個線上集成開發環境，並發現它不僅可以提供強大的開發功能，還能輕鬆地與GitHub集成，使得代碼維護變得更加順暢。</p>
<p>首先，Replit提供了一個簡單易用的線上開發環境，無需事先安裝複雜的開發工具，只需打開瀏覽器即可進入開發界面。這大大減輕了新手入門的門檻，讓開發者能夠更快速地進入代碼編寫的階段。在Replit中，我可以輕鬆建立新的專案，選擇不同的編程語言，並且能夠即時預覽和運行我的代碼，這使得開發和測試變得非常高效。</p>
<p>與GitHub的集成也是Replit的一個亮點。通過Replit，我可以直接將我的代碼與GitHub倉庫相連接，實現即時同步。這意味著我無需手動上傳代碼，只需在Replit中進行修改並提交，就能夠將變更同步到GitHub。這簡化了代碼管理的流程，減少了手動操作的瑣碎，同時確保了代碼庫的整潔和一致性。</p>
<p>此外，Replit還提供了方便的協作功能，使得團隊合作變得更加輕鬆。我可以邀請其他開發者加入我的Replit專案，共同編輯和測試代碼。這種即時的協作環境使得團隊成員能夠實時溝通，解決問題，提高了開發效率。</p>
<p>在使用Replit的過程中，我也發現了一些小缺點，例如有時在大型專案中可能會遇到性能問題，以及某些特殊語言或框架的支援可能較有限。但總的來說，Replit為GitHub的維護提供了一個便捷而高效的工具，特別適合初學者和小型團隊。</p>
<p>總結而言，Replit作為一個線上開發環境，不僅簡化了開發流程，提供了即時的協作環境，還能夠與GitHub無縫集成，使得代碼的維護變得更加輕鬆。我對於使用Replit來維護GitHub的經驗感到滿意，相信它將成為未來我開發項目的一個重要工具。</p>
<h2><span>錄製簡報影片</span></h2>